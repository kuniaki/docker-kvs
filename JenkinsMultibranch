import hudson.tasks.test.AbstractTestResultAction
import hudson.model.Actionable
import hudson.tasks.junit.CaseResult
import hudson.util.DescribableList
import hudson.slaves.EnvironmentVariablesNodeProperty
import jenkins.model.Jenkins

properties(
    [
        parameters([
          string(name: 'branch', defaultValue: 'main', description: 'branch', ), string(name: 'node', defaultValue: 'Slave1', description: 'Jenkins Node Name', ),
          string(name: 'production', defaultValue: 'asahitestapp.eastus.cloudapp.azure.com', description: 'Production', ),
        ])
    ]
)


def now = new Date()
def TIME_STAMP = now.format("yyMMdd.HHmm", TimeZone.getTimeZone('UTC'))
def test_stage = '1'



node(node) {

    //Clean up Build machine Workspace
    stage('init') {
       sh '''
       git config --global user.name kuniaki
       git config --global user.email kuniaki.kudo@gmail.com
       '''

     //Clean up WORKSPACE
     step([$class: 'WsCleanup'])
    }

   //Get Source Code
    stage('Checkout') {


       branch = ${env.BRANCH_NAME}
       checkout scm: [
           $class: 'GitSCM',
           extensions: [[$class: 'WipeWorkspace'],
                        [$class: 'CloneOption',
                         depth: 0,
                         honorRefspec: true,
                         noTags: false,
                         reference: '',
                          shallow: false]],
           userRemoteConfigs: [[url: 'https://github.com/kuniaki/docker-kvs.git',
                               refspec: '',
                               credentialsId: 'eaea2108-e081-44a2-8adf-98d7e32f43e8']],
                               branches: [[name: branch]]], poll: false
    }


    stage('checkout') {
 //   checkout scm

    if (env.BRANCH_NAME == 'master') {
       stage 'Only on master'
       println 'This happens only on master test4'
    } else {
       stage 'Other branches'
       println "Current branch ${env.BRANCH_NAME}"
    }
 }
}
